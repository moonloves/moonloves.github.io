---
layout: post
title: DOM서버의 입출력 방법(시간초과 및 컴파일러 관련)
date: 2020-09-04 12:36:00 +0900
category: lecture
---

> ### rule1. c++과 c 언어를 혼용하여 사용 금지

> ### rule2. scanf 함수는 string을 받아들이지 못함, 왜냐하면 string의 크기를 알 수 없기 때문
대신에
```ruby
    char str[1000];
    scanf_s("%s", str, sizeof(str));
```
의 형태로 string을 입력받을 수 있음

> ### rule3. 비쥬얼스튜디오는 scanf를 싫어하고 gcc컴파일러는 scanf_s 를 싫어함
* 비쥬얼스튜디오에서는
```ruby
    scanf_s("%s", str, sizeof(str))
```
의 형태로 입력을 받아야하고
* gcc 컴파일러에서는
```ruby
    scanf("%s", str);
```
의 형태로 입력을 받아야함.
* 만일 visual studio에서 scanf를 사용하여 컴파일을 완료하고 gcc컴파일러에 제출까지 하고 싶다면,
```ruby
    scanf_s("%s", str, sizeof(str));
```
이 제대로 컴파일 되는지 확인한 후, 여기서 _s만 빼고 gcc 컴파일러에 제출하면 됨
(이렇게 제출하면 물론! 비쥬얼스튜디오에서는 컴파일불가^-^)
```ruby
    scanf("%s", str, sizeof(str));
```
하지만 gcc 컴파일러에서는 correct !
* 만일 두 컴파일러에서 공통적으로 scanf를 죽어도 써야겠다면
```ruby
    #pragma warning (disabled:4996)
    scanf("%s", str, sizeof(str));
```
이런 식으로 사용하면 되는데,
이는 비쥬얼 스튜디오에서 알려주는 경고들을 disabled 하여 우리가 scanf라는 함수를 쓰게 도와주는 방법임.
이렇게하면 비쥬얼스튜디오에서도 컴파일가능, gcc 컴파일러에서도 컴파일가능.
내 컴퓨터에서는 비쥬얼스튜디오에서 컴파일 안되더라!

> ### 결론
나는
cin, cout 을 입출력 형태로 사용하기로 함
다만 비쥬얼스튜디오의 메인함수 내에서
std::ios::sync_with_studio(false);
이 코드를 작성하면 cin cout 의 입출력 속도를 향상시켜준다고 하니
gcc 컴파일러를 이용할 때 이 코드를 이용할 예정 !